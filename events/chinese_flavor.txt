namespace = chinese_flavor

chinese_flavor.1 = {
    type = country_event
    hidden = yes

    left_portrait = current_ruler

    trigger = {
        country_culture_group = chinese
    }

    immediate = {
    	ordered_country = {
    		limit = {
    			country_culture_group = "chinese"
    		}
    		max = 5
    		order_by = num_of_cities
    		current_ruler = {
    			if = {
    				limit = {
    					NOT = { has_variable = chinese_ruler }
    				}
    				set_variable = chinese_ruler
    			}
    		}
    	}
    }
}

chinese_flavor.2 = { # A New Emperor
    type = major_country_event
    title = chinese_flavor.2.t
    desc = chinese_flavor.2.desc
    picture = chinese_emperor

    left_portrait = current_ruler
    left_portrait = scope:char2
    left_portrait = scope:char3

    right_portrait = scope:char1
    right_portrait = scope:char5
    right_portrait = scope:char6

    immediate = {
        if = {
            limit = {
                # Should check that there are not 5 merchants already, if there are the effects would do nothing.
                NOT = {
                    country_has_special_pop = {
                        type = merchant # Type of special pop to check for
                        text = "country_has_5_merchant_tt"
                        count = 5 # checks if >= 5
                    }
                }
                # Check if there is at least 1 merchant special pop in the capital
                capital_scope = {
                    province_has_special_pop = {
                        text = "prov_has_1_merchant_tt"
                        type = merchant # Type of special pop to check for
                        count = 1 # checks if >= 5
                    }
                }
            }
            capital_scope = {
                add_special_pop = {
                    text = "add_2_merchant_tt"
                    type = merchant
                    count = 2
                }
            }
        }
        if = {
            limit = {
                current_ruler = { is_married = yes }
            }
            current_ruler.spouse = {
                save_scope_as = char1
            }
        }
        else = {
            ordered_character = {
                limit = {
                    is_adult = yes
                    is_ruler = no
                    has_same_family = root.current_ruler
                }
                order_by = prominence
                save_scope_as = char1
            }
        }
        ordered_character = {
            limit = {
                is_adult = yes
                is_ruler = no
                has_same_family = root.current_ruler
                exists = scope:char1
                NOT = { this = scope:char1 }
            }
            order_by = prominence
            save_scope_as = char2
        }
        ordered_character = {
            limit = {
                is_adult = yes
                is_ruler = no
                has_same_family = root.current_ruler
                exists = scope:char1
                exists = scope:char2
                NOR = {
                    this = scope:char1
                    this = scope:char2
                }
            }
            order_by = prominence
            save_scope_as = char3
        }
        ordered_character = {
            limit = {
                is_adult = yes
                is_ruler = no
                has_same_family = root.current_ruler
                exists = scope:char1
                exists = scope:char2
                exists = scope:char3
                NOR = {
                    this = scope:char1
                    this = scope:char2
                    this = scope:char3
                }
            }
            order_by = prominence
            save_scope_as = char4
        }
        ordered_character = {
            limit = {
                is_adult = yes
                is_ruler = no
                has_same_family = root.current_ruler
                exists = scope:char1
                exists = scope:char2
                exists = scope:char3
                exists = scope:char4
                NOR = {
                    this = scope:char1
                    this = scope:char2
                    this = scope:char3
                    this = scope:char4
                }
            }
            order_by = prominence
            save_scope_as = char5
        }
        ordered_character = {
            limit = {
                is_adult = yes
                is_ruler = no
                has_same_family = root.current_ruler
                exists = scope:char1
                exists = scope:char2
                exists = scope:char3
                exists = scope:char4
                exists = scope:char5
                NOR = {
                    this = scope:char1
                    this = scope:char2
                    this = scope:char3
                    this = scope:char4
                    this = scope:char5
                }
            }
            order_by = prominence
            save_scope_as = char6
        }
        set_global_variable = china_unified
        set_variable = {
            name = mandate_variable
            value = mandate_initial_value
        }
        mandate_yearly_effects = yes
		set_variable = {
			name = first_chinese_emperor_character_scope_variable
			value = root.current_ruler
		}
    }

    option = { #The Celestial Empire will last for Eternity
        name = chinese_flavor.2.a
        add_legitimacy = 25
    }
    after = {
        every_country = {
            limit = {
                is_ai = no
                NOT = { this = root }
            }
            trigger_event = chinese_flavor.4
        }
    }
}

#chinese_flavor.3 = { # testing
#    type = major_country_event
#    title = chinese_flavor.3.t
#    desc = chinese_flavor.3.desc
#    picture = chinese_emperor

#    left_portrait = current_ruler
#    left_portrait = scope:char1
#    left_portrait = scope:char2

#    right_portrait = scope:char3
#    right_portrait = scope:char4
#    right_portrait = scope:char5

#    immediate = {
#        random_living_character = {
#            save_scope_as = char1
#        }
#        random_living_character = {
#            save_scope_as = char2
#        }
#        random_living_character = {
#            save_scope_as = char3
#        }
#        random_living_character = {
#            save_scope_as = char4
#        }
#        random_living_character = {
#            save_scope_as = char5
#        }
#    }

#    option = { #
#        name = add_20_mandate
#        add_treasury = 999
#    }
#    option = { #
#        name = add_14_mandate
#        add_treasury = 3094
#    }
#    option = { #
#        name = add_13_mandate
#        add_treasury = 3094
#    }
#    option = { #
#        name = add_15_mandate
#        add_treasury = 3094
#    }
#    option = { #
#        name = add_19_mandate
#        add_treasury = 3094
#    }
#}

chinese_flavor.4 = {
    type = country_event
    title = chinese_flavor.4.t
    desc = chinese_flavor.4.desc
    picture = china_art_12_event
    
    left_portrait = current_ruler
    left_portrait = scope:char2
    left_portrait = scope:char3

    right_portrait = scope:char1
    right_portrait = scope:char5
    right_portrait = scope:char6

    immediate = {
        if = {
            limit = {
                current_ruler = { is_married = yes }
            }
            current_ruler.spouse = {
                save_scope_as = char1
            }
        }
        else = {
            ordered_character = {
                limit = {
                    is_adult = yes
                    is_ruler = no
                    has_same_family = root.current_ruler
                }
                order_by = prominence
                save_scope_as = char1
            }
        }
        ordered_character = {
            limit = {
                is_adult = yes
                is_ruler = no
                has_same_family = root.current_ruler
                exists = scope:char1
                NOT = { this = scope:char1 }
            }
            order_by = prominence
            save_scope_as = char2
        }
        ordered_character = {
            limit = {
                is_adult = yes
                is_ruler = no
                has_same_family = root.current_ruler
                exists = scope:char1
                exists = scope:char2
                NOR = {
                    this = scope:char1
                    this = scope:char2
                }
            }
            order_by = prominence
            save_scope_as = char3
        }
        ordered_character = {
            limit = {
                is_adult = yes
                is_ruler = no
                has_same_family = root.current_ruler
                exists = scope:char1
                exists = scope:char2
                exists = scope:char3
                NOR = {
                    this = scope:char1
                    this = scope:char2
                    this = scope:char3
                }
            }
            order_by = prominence
            save_scope_as = char4
        }
        ordered_character = {
            limit = {
                is_adult = yes
                is_ruler = no
                has_same_family = root.current_ruler
                exists = scope:char1
                exists = scope:char2
                exists = scope:char3
                exists = scope:char4
                NOR = {
                    this = scope:char1
                    this = scope:char2
                    this = scope:char3
                    this = scope:char4
                }
            }
            order_by = prominence
            save_scope_as = char5
        }
        ordered_character = {
            limit = {
                is_adult = yes
                is_ruler = no
                has_same_family = root.current_ruler
                exists = scope:char1
                exists = scope:char2
                exists = scope:char3
                exists = scope:char4
                exists = scope:char5
                NOR = {
                    this = scope:char1
                    this = scope:char2
                    this = scope:char3
                    this = scope:char4
                    this = scope:char5
                }
            }
            order_by = prominence
            save_scope_as = char6
        }
    }

    option = { # An Empire like this can't last long...
        name = chinese_flavor.4.a
    }
}

chinese_flavor.5 = { # Turmoil in China
    type = major_country_event
    title = chinese_flavor.5.t
    desc = chinese_flavor.5.desc
    picture = Wang_Hui_3_event
    left_portrait = c:CHU.current_ruler
    right_portrait = c:QIN.current_ruler
    right_portrait = c:ZHO.current_ruler
    left_portrait = c:ZHA.current_ruler
    left_portrait = c:QII.current_ruler
    right_portrait = c:YAN.current_ruler

    trigger = {
        country_culture_group = chinese
    }

    immediate = {
        # Set unification var for all potential unifiers
        set_variable = {
            name = unification_points
            value = 0
        }
        # TI
        check_chinese_unification_provs_effect = yes
        check_chinese_unification_subjects_effect = yes
    }

    option = { #China will be ours!
        name = chinese_flavor.5.a
        custom_tooltip = chinese_flavor.5.tt
        hidden_effect = {
            every_province = {
                limit = {
                    OR = {
                        is_in_region = yi_region
                        is_in_region = jing_region
                        is_in_region = yang_region
                        is_in_region = bing_region
                        is_in_region = ji_region
                        is_in_region = you_region
                        is_in_region = qing_region
                        is_in_region = xu_region
                        is_in_region = shuofang_region
                        is_in_region = yong_region
                        is_in_region = yu_region
                        is_in_region = yan_region
                    }
                    is_inhabitable = yes
                    has_owner = yes
                }
                add_claim = root
            }
        }
    }
}
